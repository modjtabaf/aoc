
#include <algorithm>
#include <cassert>
#include <cstdint>
#include <functional>
#include <iostream>
#include <limits>
#include <string>
#include <utility>
#include <vector>


using Map = std::vector<std::string>;

std::array<std::pair<int, int>, 4> dxdy{{
    {1, 0},
    {0, 1},
    {-1, 0},
    {0, -1},
}};

Map sample_map1{
    "###############",
    "#.......#....E#",
    "#.#.###.#.###.#",
    "#.....#.#...#.#",
    "#.###.#####.#.#",
    "#.#.#.......#.#",
    "#.#.#####.###.#",
    "#...........#.#",
    "###.#.#####.#.#",
    "#...#.....#.#.#",
    "#.#.#.###.#.#.#",
    "#.....#...#.#.#",
    "#.###.#.#.#.#.#",
    "#S..#.....#...#",
    "###############",
};

using MapScores = std::vector<std::vector<uint64_t>>;
using AllScores = std::vector<MapScores>;

AllScores sample_scores;

Map map{
    "#############################################################################################################################################",
    "#.....#...#.....#...#.........#...#.....#...........#.........#...................#.#.........#.......#.........#.......#.......#.........#E#",
    "#.#.#.#.###.#.#.#.#.#.###.###.###.#.#.#.###.#######.#.#.#####.#.#########.#####.#.#.#.#.###.#.#####.#.###.#####.#.#####.#.###.#.#.#######.#.#",
    "#.#.#.............#...#...#.#...#.#.#.....................#...#.#.......#.#.....#.#.....#...#.......#...#.....#...#...#...#.#...#.....#.#.#.#",
    "#.#.#.#####.#.#.#.#####.###.###.#.#.#.#.#.###.#.#.#.#####.###.###.#####.###.#####.#####.#.#############.#.###.#.###.#.#####.#.###.###.#.#.#.#",
    "#.#.#.....#.#.#.#.#.#...#.....#.#...#.#.#.#.#...#...#...#...#...#.....#.....#...#.....#.#...#...#.....#.#...#.#.....#.........#.#...#.#.#.#.#",
    "###.#####.#.#.###.#.#.###.###.#.#.###.#.#.#.#.#######.#.###.###.#.###.#########.#####.#.###.#.###.###.#.#.###.#.###############.###.#.#.#.#.#",
    "#...#.....#.#.......#.#...#...#.#...#.#...#.#...#.....#...#.#.#.#.....#.................................#...#.#.....#.........#.....#.#.#.#.#",
    "#.###.#####.#.###.###.#####.###.###.#.#####.###.#####.###.#.#.#.#.#####.#.#.#######.###.#.#.#.#####.#####.#.#.#.###.#####.###.#######.#.#.#.#",
    "#.#.......#.#...#.#...#...#.....#...#...#.............#.#...#...#.#...#.#.#.#.....#...........................#...........#.#.....#...#.....#",
    "#.#######.###.#.###.###.#.###.###.#####.###############.#####.###.#.#.#.#.###.###.###.#####.###########.#.#################.#####.#.#.#######",
    "#...#.........#.....#...#...#.#.....#.#.........#...........#...#...#.#.#...#.#...#.....#.#.#.....#.....#.............................#.....#",
    "###.#.###############.#####.#.#####.#.#########.###########.###.#####.#.###.#.#.#######.#.#.###.#.#.###.#.#####.#.#####.###.#########.#.###.#",
    "#...#...#.#.....#.........#.#.....#.#.........#.#.............#...#...#.#.#.#.#.......#...#.....#.#...#.#.#...#...#...#...#...........#.#...#",
    "#.#####.#.#.###.#.###.#####.#####.#.#####.#.###.#.###############.#.###.#.#.#.#######.###.#.#####.#.#.#.#.#.#.#####.#.###.###########.#.#.#.#",
    "#.....#...#...#.#.#.#.......#...#.#.......#.#...#...............#...#...#.#.#.#.#...#...#...#.....#.#.#.#...#...#...#...#...#...........#...#",
    "#.###.###.###.#.#.#.#.#######.#.#.#######.###.###.###########.#########.#.#.#.#.#.#.###.###.#.#.###.#.#########.###.#.#####.#.#.#####.#####.#",
    "#.#.#.#...#...#...#.#.#.....#.#.#.#.#...#.#...#.#.....#.....#.#.......#.....#.#...#.#...#.....#...#.#.........#...#.#.....#...#...........#.#",
    "#.#.#.###.#.#######.#.#.###.#.#.#.#.#.#.#.#.###.#####.#####.#.#.#.###.#####.#.#####.#.###########.#####.#####.###.#.###.#######.#######.#.#.#",
    "#...#...#.#.#.......#.#...#...#.#.#.#.#...#.#.......#...#...#...#...#...#...#.#...#.#...........#.....#.#.......#.#...#.....#...............#",
    "###.###.#.#.#######.#.###.#####.#.#.#.#####.###.###.###.#.#.#.#####.###.#.###.#.#.#.###########.#####.#.#########.#.#####.#.#.#.#####.#####.#",
    "#...#...#.#.#.....#.#...#.#...#.#.#...#...#...#.#...#...#.......#...#.#...#...#...#...#...#...#.....#.#.....#.....#.#.....#.#...#...#.#...#.#",
    "#####.#####.#.###.#.###.#.#.#.#.#.###.###.###.#.#.###.#####.###.#.###.###.#.###.#.#.#.#.#.#.#.###.###.#.###.#.#######.#####.#.#.#.#.#.#.#.#.#",
    "#.....#.....#...#.#...#.#.#.#...#...#.......#.#.#.........#...#.#.#.....#.#.....#...#...#...#...#.....#...#.#...#...#.#...#...#...#...#.#.#.#",
    "#.#####.#######.#.#.###.#.#.#######.#######.#.#.#########.###.#.#.#.#.#.#.#################.###.###.###.###.###.#.#.#.#.###.#.#########.#.#.#",
    "#.....#.#.......#...#.....#.......#.....#...#.#...#.....#.....#.#.#.#...#.#...........#.....#.....#.....#...#.#...#.#.#.....#...........#...#",
    "#.###.#.#.#.###.###.#.###.###.#########.###.#.#####.###.#######.#.#.###.#.###.#.#####.#.#####.###.#######.#.#.#####.#.###.#.#.#.#.#.###.#####",
    "#.#.#...#.#...#...#.....#.#...#.......#...#.#.....#...#.....#...#.#...#.#...#.#.#.....#...#...#.#.....#...#...#.....#...#.#.....#.#...#.#...#",
    "#.#.#########.#.#.#####.#.#####.#.###.###.#.#.###.#.#######.#.###.###.#.###.#.#.###.#####.#.#.#.#####.#.#######.#####.#.#.#.#####.###.#.#.#.#",
    "#.............#.#.....#.#.....#.#.#.#.....#...#...#.#.........#.#.#...#.#...#.#.....#...#.#.#.#.......#.#.....#...#...#.#.#.....#.#...#.#.#.#",
    "#.###########.#.#####.#.#.###.#.#.#.###.#.#####.###.#.#######.#.#.#.###.#.#######.#.#.###.#.#.#.#######.#.###.#.#.#####.#.###.#.#.#.#.###.#.#",
    "#.#...#...#...#.#.#.....#...#...#.#.....#...........#.....#.#.#.#.#.#...#.........#...#...#...#.....#.......#...#...#...#...#.#...#.#.#...#.#",
    "###.#.#.#.#.#.#.#.#.#############.###########.#.#########.#.#.#.#.#.#########.#######.#.###.###.###.#########.#####.#.#####.#.###.#.###.###.#",
    "#...#.#.#...#.#.#...#...........#.............#.......#...#.#.#.#.#.......#...#.....#.#.#.#...#.#...#.......#.#.....#...#...#.#...#.......#.#",
    "#.###.#.#####.#.#####.#########.###.###.#####.#######.#.###.#.#.#.#.###.#.#.###.###.###.#.#.#.#.#.###.#####.#.#.#######.#.###.#.#########.#.#",
    "#.#.....#...#.#.#...........#.#...#...#.....#.#.......#.#.....#.#.#.....#.......#.#...#.#.#.#.#.....#...#...#.#...#.....#...#.#.....#...#.#.#",
    "#.#######.#.#.#.#.#########.#.###.###.#####.#.#.#######.#####.#.#.#.#.#######.###.###.#.#.#.#.#####.###.#.###.###.#.#######.#.#####.#.#.###.#",
    "#.........#.#.#.#...#.#...#.....#.#.#...#...#.#.......#.....#...#...#.#.....#.#.....#...#...#...#...#...#.#.....#...#.....#.#...#.....#.....#",
    "#.#########.#.#.###.#.#.#.#.#####.#.#.###.###.#.#######.###.#######.###.###.#.#####.#####.###.#.###.#.###.#.###.#####.###.#.###.#.#.###.#####",
    "#...#...#...#.....#...#.#...#.....#...#...#...#.#.....#.#...#.....#.......#...#.....#...#.#.......#...#...#...#.#...#.#.#...#...#.#...#.#...#",
    "###.#.###.###.#.#####.#.###.#.#####.###.###.#####.#.#.#.#.#.#.###.#######.#####.#####.#.#.#.#.###.#####.#####.#.#.#.#.#.#####.###.#.#.###.#.#",
    "#.#...#...#.....#.....#.#.#.#.....#.#.#...........#.....#.#.#...#...#...#.....#.........#.#.#.....#...#.......#...#.#.......#.#...#.#.#...#.#",
    "#.###.#.#.###.#.#.#####.#.#.#####.#.#.#################.#.#####.###.#.#.#####.#######.#.#.#.#######.#.###########.#########.#.#.###.#.#.###.#",
    "#...#.#.#.#...#.#.#...#.#.#...#...#.....#...........#.....#.....#.#.#.#...#.........#.#...#.....#...#.......#.....#.......#...#.....#.....#.#",
    "#.###.#.#.#.#.###.#.#.#.#.###.#.#######.#.#####.###.#.#####.#####.#.#.###.#########.#.#.#####.#.#.#######.#.#######.#.#####.#######.###.###.#",
    "#.#...#.#.#.#.....#.#...#...#.#...#...#...........#.#...#...#.....#...#.#...#.....#...#.#.#.....#.#.......#.........#.......#.....#.........#",
    "#.#.###.###.#.#####.#.#####.#.###.#.#.#.#########.#.#.#.#.#######.#.#.#.###.#####.###.#.#.#.#####.###.###.#############.#####.###.#.###.###.#",
    "#.#...#.#...#.......#.....#.......#.#.....#...#.#.#...#...#.....#.#.#.#...#...#...#...#...#.#...#...#.#.......#.......#.....#.#...#...#...#.#",
    "#.###.#.#.###.#####.#.###.#######.#.#####.#.#.#.#.#########.###.#.#.#.#.#.###.#.#.#.#######.#.#.###.###.#####.#.#####.#######.###.#.#.#.#.#.#",
    "#.....#.....#.#...#.#.#.#.#...#.........#...#.#.#.#.....#.....#...#.#...#...#.#.......#...#.#.#...#...#.....#.#...#.....#...#...#.....#.#...#",
    "#.###########.#.###.#.#.#.#.#.#####.###.#####.#.#.#.#####.###.#####.#######.#.#######.#.#.#.#.#.#####.#####.#.###.#####.#.#.###.###.###.###.#",
    "#...#.....#...#.....#.#.#...#.#.......#...#.....#.#.........#.....#.#...#...#.#...#...#.#.#...#.#...#.......#...#.....#.#.#...#.#.....#.#...#",
    "###.###.###.#######.#.#.#####.#.#######.#.#.#####.#.#.###########.#.#.#.#.###.#.#.#.###.#.#####.#.#.###########.#####.#.#.###.#.#.#.###.#.#.#",
    "#.#...#.#...#.....#.#...#...#.....#...#.#.#.#.....#.#.#.......#...#...#...#...#.#.#.....#.....#.#.#.........#...#...#.#...#...#.#.......#...#",
    "#.#.#.#.#.#.#.###.#####.#.#########.#.###.###.#####.#.#.#####.#.#.#########.###.#.###########.#.#.#########.#.###.#.#.#####.###.#.#.###.###.#",
    "#.....#.#.#.#.#...#.....#.......#...#.....#...#.......#.#.....#.#.......#.#.....#.#.#.........#...#.......#...#...#.#.#.....#...#.........#.#",
    "#.#####.#.#.#.#.###.#####.###.#.#.#######.#.#####.#####.###.###.#######.#.#######.#.#.#####.#####.#######.#####.#####.#.#######.#######.#.#.#",
    "#...#...#.........#.#.....#...#.#.#.....#.#.....#.#...#...#.....#.#.....#.#.....#.#...#.........#...#...#.......#.....#.#.......#.#.....#.#.#",
    "###.#.#.#.#.#.###.#.#.#####.#####.#.#.#.#.#####.#.###.###.#######.#.#####.#.###.#.#.#####.#####.###.#.#.#.#.#####.#####.#####.#.#.#.###.#.#.#",
    "#.....#.#.#.....#...........#.....#.#.#.#.#.....#.....#...#...#...#.#...#...#...#.#.......#.....#.#...#.#.#.#...#...#.........#.....#.#.#.#.#",
    "#######.#.#.#################.#####.#.###.#.#######.#.#.###.#.#.#.#.#.#.#.#.#.###.#########.###.#.#####.#.###.#.#.#.###.#######.#####.#.#.#.#",
    "#.....#.#...#...............#...#.#.#.#...#...#.....#.#.......#.#.#...#.#.#.#.#...........#.....#.....#.#.#...#.#.#...#.......#.#.....#...#.#",
    "#.###.#####.#.#####.#####.#.###.#.#.#.#.#####.#.###.#.#######.#.#.#.#.#.#.#.#.###########.#.#.#####.#.#.#.#.###.#####.#.#####.#.#.###.#####.#",
    "#.#...#...#...#.......#...#...#.#.#.#...#...#.#.#...#...#...#.#.#.#...#...#.#...............#.....#.#.....#.#.#...#...#.#...#.#...#...#.....#",
    "#.#.###.#.#.#.#.#.#.#.#.#.###.#.#.#.#####.#.#.#.#.#####.###.#.#.#.#.#.#####.###.#.#########.###.#.#.#######.#.###.#.###.#.#.###.###.###.###.#",
    "#.#.#...#...#.#.#...#...#.#.#.#.#.#...#...#.#.#.#.#.........#.#...#.#.......#.#...#.......#.#...#.#.#.......#...#.#...#...#.........#.#.#...#",
    "#.#.###.###.###.#########.#.#.#.#.###.#.###.#.#.###.#####.###.#.###.#.#.#####.#####.#####.#.#.###.###.#######.#.#.###.#########.#.#.#.#.#.#.#",
    "#.#.....#.......#.........#...#.#...#.#.#...#.......#...#.#...#...#.#.#...........#.....#...#.#.#.....#.........#...#.#...#.....#.#.#...#...#",
    "#.#######.#######.#########.###.#.#.#.#.###.#.#######.#.###.###.#.#.#.#####.#.###.#####.#####.#.#######.###.#######.#.#.#.#.###.#.#.#######.#",
    "#.#.....#...#.#...#...#.....#.....#.#.#.#...#.#.....#.#.....#.#.#...#.#...#.#.........#.#.....#.....#...#.#.........#.#.#...#.....#.......#.#",
    "#.#.###.###.#.#.###.#.#.#########.#.#.#.#.#.#.#.#.#.#.#######.#.#####.#.#.###.#.#######.#.#####.###.#.###.#######.#.#.#.#######.#########.#.#",
    "#.....#...#...#.#...#.#.#.....#...#.#...#.#...#...#...#.......#...#...#.#...#.#...#.....#.#...#.#.#...#.....#.......#.#.......#.........#...#",
    "#.#####.#####.#.#.###.#.#.#.#.#.###.###.#.#####.#.#.###.#.###.###.#.#####.#.#.###.#.#####.###.#.#.#####.#.###.#.#####.#.#####.#.#####.#####.#",
    "#...#...#.....#...#...#.#.#.#.#...#.#...#.....#.#.#...#.#...#.#...#.........#...#.#.......#...#.#.....#.#.....#.......#...#.#.......#.#.....#",
    "#.###.#.#.#########.###.#.#.#.###.#.#.#######.#.#.#.#.#####.###.###############.#.#########.###.#.###.###.###########.###.#.###.###.#.#.#####",
    "#.#...#.#.#.#.....#...#...#.#.....#.#.#...#.#.#.#.#.#...#.......#.....#.......#.#.....#...#.....#...#...#...........#...#.#.......#.#.#.....#",
    "#.#.#####.#.#.#.#####.#####.#######.#.#.#.#.#.###.#.###.#.###.###.###.#######.#.#####.#.#.#.#####.#.###.#########.#####.#.#####.#.#.#.#.###.#",
    "#.#.......#...#.#.....#...#.........#.......#...#...#...#...#.#...#...#.......#.#...#.#.#.......#.#.......#.......#.....#.......#...........#",
    "#.#############.#.#####.#.###.#############.###.#####.###.#.#.#.###.###.#####.#.###.#.#.#####.#.#.###.###.#####.###.#######.###.#####.#.#.#.#",
    "#.#...........#.#.......#.................#...#.....#.....#.#.#.#.#.#...#.....#.#...#.#...#.#.#.........#.....#...#.#.....#.....#...#...#...#",
    "#.###.#######.#.###########.###.#######.#####.#####.###.#.#.#.#.#.#.#.#########.#.#.#.###.#.#.#####.###.#####.#####.#.###.#.#####.#.#.#.#####",
    "#.....#.....#...#.........#...#...#...#...........#.....#.#...#.#...#.............#.#.......#.#...#...#.#...#.......#...#...#...#.#.#.#.....#",
    "###########.###.#.#######.###.###.###.###########.#######.#####.#.#################.#.#.#.#.#.#.###.#.#.#.#############.#####.#.#.#.#.#.###.#",
    "#.............#.#.#...#.#.#.#.#.#...#.#.....#...........#.#.....#.#.............#...#.#...#.#.....#.#.#.#.#.....#.....#.#.#...#...#.#.#...#.#",
    "#.###.#######.#.#.#.#.#.#.#.#.#.###.#.#.###.#.#########.#.###.###.###.#.###.###.#.###.###.#.#.#.#.#.#.#.#.#.###.#.#.###.#.#.#######.#.#.#.#.#",
    "#.#...#...#.#.#.#...#.#.....#.#.......#...#.#...........#...#.#.#.#...#.#...#.#.#...#.#...#.#.#.....#.#...#...#.#.#.......#.#...#.#.......#.#",
    "#.#.#.#.#.#.#.#.#####.#####.#.#####.#.###.#.###.#######.###.#.#.#.#.###.#.#.#.#.#####.#.###.#.#.#####.#.#.###.#.#.#.#####.#.#.#.#.###.#.#.#.#",
    "#...#.#.#...........#.....#.#.......#.#.#.#.....#.....#...#...#...#.#...#.#.#.........#.#...#.#...#...#.#...........#...#.#...#...#.....#.#.#",
    "#.#.###.#.#########.#####.#.#######.#.#.#.#######.###.###.#####.###.#####.#.#######.#.#.###.#.#####.#.#.#####.#.#####.#.#########.#.#.#.###.#",
    "#.#.......#...#...#.#.....#...#...#.#.#.#.#.......#...#.....#...#.........#.#.....#...#.#...........#.#.#...#.#.......#.#.....#.............#",
    "#.#.#####.#.#.#.#.#.#.#####.#.#.###.#.#.#.###.#####.###.#####.###########.#.#.###.#.###.#.#######.#####.#.#.#.#.#.#####.#.###.#.###.#.#.#.###",
    "#.#...#...#.#...#...#.#.#.......#...#...#.....#.#...#.#.......#.........#.#...#...#.#...#.........#...#...#.#.#.....#...#.#.#.#.#...#...#...#",
    "###.#.#.###.#########.#.#.#######.###.#.#######.#.###.#########.#######.#.#####.###.#.#######.#####.#.#.###.#.###.###.#.#.#.#.#.#.###.###.#.#",
    "#...#.#...#.#.........#.#...#.....#.#...#.....#...#.............#.....#.#.....#.#...#.......#...#...#.#.#...#.#...#...#.#.#.#...#.#.#.#.#.#.#",
    "#.#.#.###.#.#.#.#######.#.#.#.#####.#.###.#.###.#####.###########.#.#.#.#######.#.#########.###.#.###.###.###.#.###.#####.#.#####.#.#.#.#.#.#",
    "#...#.....#.#.#.#...#.....#.#...#...#.#...#...#...........#.........#.#...#.....#.......#...#.....#.......#...#...#...........#.............#",
    "#.#.###.###.#.#.#.#.#.#.###.###.#.#.#.#.#####.###########.#.#.#.#########.#.#######.#####.###.#####.#############.#####.#####.#.###.#.#.#.#.#",
    "#.#.#...#...#.#.#.#.#...#...#...#...#.#.#...#.#.........#...#.#.#.......#.#.....#...#.....#...#.....#...........#...#...#...#.#...#...#...#.#",
    "#.#.###.#.#####.#.###.#.#.###.#####.#.#.###.#.#.###.###.#####.#.#.###.###.#.###.#####.#####.#.#.#####.#########.###.#.#.#.#.#####.#.###.#.#.#",
    "#.#...#.#.#.....#.....#...#...#.....#.#.....#.#.#.#...#.#.....#.#.#.#.#...#...#.......#.....#.#.#.........#...#.....#.#.#.#...#...#...#.#...#",
    "#.###.###.#.#########.#.###.#####.###.#####.#.#.#.#.#.#.#.#.#####.#.#.#.#.###.#########.###.#.###.#######.#.#.#######.#.#.###.#.#####.###.#.#",
    "#.#.#.....#...........#.#...#...............#.....#...#.#.#.#...#...#...#.#...#.....#.......#.#...#.....#...#...#.#...#.#.#.#...#...#.....#.#",
    "#.#.#######.#########.#.#.#.#.#.#########.#########.#.#.#.###.#.###.#####.#.###.#####.#.###.#.#.###.###.#######.#.#.###.#.#.#####.#.#####.#.#",
    "#...#.....#...#.....#.#.#.....#...#...#.#.#.........#...#.#...#.....#.#...#.#...#.....#...#.#...#...#.#.#...#.....#...#...#.....#.#...#...#.#",
    "###.#.###.#####.###.#.#.#.#.#.###.#.#.#.#.#.#########.###.#.#########.#.#.#.#.#.#.###.#.#.#.#####.###.#.#.#.#.#######.#####.###.#.#####.#.#.#",
    "#.#...#.#.#.....#.#.#.#.#.#.....#...#.#...#...#...#.#.#...#.....#.......#.#.#.#.....#...#.#...#...#...#.#.#.....#.....#.#...#.....#.........#",
    "#.#####.#.#.#####.#.#.###.#####.#####.#.#####.#.#.#.#.#.#######.###.#####.#.#######.#.###.###.#.###.###.#######.#.#####.#.#.#####.#.#####.###",
    "#.....#...#.#...#.....#.......#.....#.#.#...#...#.#...#.....#.#...#.....#.#...#.....#.#.#.#...#...#.....#.....#.#...#.#...#...#...#.#...#...#",
    "#.#.###.###.###.#.#####.###.#######.#.#.#.#.#####.#.#####.#.#.###.#######.###.#.###.#.#.#.#####.#.#.#####.###.#####.#.#.#####.#.###.#.#.#.###",
    "#.#...#.....#...#.#...#...#.#.....#.#.#...#.....#.#.#...#.#.#...#.#.....#...#.#.#...#.#.#.....#.#.#.......#...#.....#.#...#.#.#...#...#.#...#",
    "#.###.#####.#.###.#.#.###.###.###.#.#.#########.#.#.#.#.#.#.#.###.#.###.#.#.#.#.#.###.#.#####.###.#####.#####.#.#####.###.#.#.###.#####.#.#.#",
    "#.#.......#...#...#.#...#.#...#.#...#...#.....#...#...#...#...#...#.#.#...#.#...#.....#.....#...#.#.....#...#...#.......#...#.#...#...#.....#",
    "###.#.#####.#.#.###.###.#.#.###.#######.###.#.###.#########.###.###.#.#.#.#.#######.###.###.###.#.###.###.#.#####.#####.###.#.#.###.#.###.#.#",
    "#.............#.#.#.#.....#...#.......#...#.#...#.#...#...#.#...#...#.....#.......#.....#.#.#.#.#...#.#...#.#...#.........#.#.#.....#.#.....#",
    "#.###.#.#.#.#.#.#.#.#########.#.#####.###.#.###.#.#.#.#.#.###.###.#######.#######.#.#.###.#.#.#.###.#.#.###.#.#.#########.#.#.#######.#.#.#.#",
    "#.#.#.#.#...#...#.#.........#...#.....#...#...#...#.#...#.....#.#.......#...#.....#.#.#...#.#.#.#...#.#...#...#...#.....#...#...#...#.#.#...#",
    "#.#.#.#.###.#####.#.#.###.#.#####.#####.###.#.#####.###########.#.#####.#.#.#.#######.#.#.#.#.#.#.###.###.#######.#.###.#######.#.#.###.###.#",
    "#.#...#...........#.....#.#.....#...#.#.#.......#...#...#...#.....#...#.#.#.#.........#.#.#.#.#.#...#.#.....#...#.....#.......#.#.#.#...#...#",
    "#.###########.#########.#.#.###.###.#.#.#########.###.#.#.#.#.###.###.#.###.#.#####.###.#.#.#.#.#.#.###.#####.#.#####.#######.#.#.#.#.###.#.#",
    "#.....#.....#.#.......#.#...#...#...#.#...............#.#.#.#.#.......#...#...#...#.....#...#.#.#.#.....#...#.#...............#...#.#.#...#.#",
    "#.###.#.#.###.#.#####.#.#####.###.###.#############.#.###.#.#.#.#.#.#.###.#####.#.###.#######.#.###.#####.#.#.###############.#.###.#.#.###.#",
    "#...#...#.....#...#...#.....#.#...#...#...........#.#.....#.#.#.#...#.#.#.....#.#...#.........#...#...#...#.#...#.......#.....#.#...#...#...#",
    "###.#####.#####.#.#.#########.#.#####.#.#########.#.#######.#.###.###.#.###.#.#.###.#############.#####.###.###.#.#####.#.#.###.#.#######.#.#",
    "#...#.......#.....#.#.......#.#.#.....#.#.#...#...#.#.....#...#...#...#.....#...#.#...#.........#.#.....#.#...#.#...#.#...#.....#.........#.#",
    "#.###.###.#.#.###.#.#.#####.#.#.###.###.#.#.#.#.###.#.#########.###.###.#########.###.#.#######.#.#.#####.###.#.###.#.###########.#.#######.#",
    "#.#.......#.#.....#...#.......#...#...#.#.#.#.#.....#.#.......#.#.#.#...........#...#...#.......#...#.......#...#.#...#...............#.....#",
    "#.#######.#.#####.#####.#####.###.###.#.#.#.#.#######.#.###.#.#.#.#.#######.###.#.#.#####.#.#######.#.###.#.#.###.###.#.#########.#.#.#.###.#",
    "#.........#.#...#...#.......#...#...#.#.#...#.............#.#...#.#.#.......#...#.#.....#.#.........................................#...#.#.#",
    "#########.#.#.#.###.#########.#.###.#.#.###.###############.#####.#.#.#########.#.###.#.#.###.#####.#####.###.#.#.###.#.###.#.#.#.#.#####.#.#",
    "#.........#.#.#...#.........#.#.....#.#...#.......................#.#.........#.#...#.#.#...#.#...........#.....#.#...#...#...#.#.....#.....#",
    "#.#######.#.###.#.#########.#.#######.###.###########.###.###.#.###.#.#######.#.#.###.#.###.#.#.#.#.#.#.#.###.#####.###.#######.#.#.#.#.###.#",
    "#.......#.#.....#.#.........#.........................#.#.....#...#.#.....#...#.#.#...#...#...#.#...#.#.#.........#...#.#.......#...#.#.#...#",
    "#.#####.#.#######.#.#.###.#.###.#.#####.#####.#.#######.#########.#.#.#####.###.#.#.#####.#########.#.#.#.###.###.###.#.#.#######.#.###.###.#",
    "#.....#.#...#.....#.#.#...#...#.#.....#.....#...#.................#.#.#...#...#.#.#.#...#...........#.#.#...#...#.#...#.....................#",
    "#####.#.#.#.#.#####.#.#.#.#.#.#.#####.#####.###########.#.#.#.#####.###.#.#.#.#.###.#.#.#######.###.#.#.#####.#.#.#.###.#.#.###.#.#.#.#####.#",
    "#...#.#...#.#.....#.#.#.#.#.#.#...#.#.#...#.#.......#...#.#.#.#.....#...#.#.#.#...#.#.......#...#.....#.....#.#.............#.#.....#.....#.#",
    "#.###.###.#######.#.#.#.#.#.#####.#.#.###.#.#.#.###.#.###.#.#.#.#####.###.###.###.#.#######.#.###.#.#######.#.#####.#.###.#.#.###.#.#####.#.#",
    "#.....#.#.........#.#...#.#.....#.#.#.........................#...#...#...#...#...#.................#.....#...#...#.#.....#...#...........#.#",
    "#.#####.#############.###.#####.#.#.#####.#.#.###.###############.###.#.###.###.###.#.#########.###.#.###.###.#.#.#.#.#######.#.#.#.#######.#",
    "#S............................#...#.......#.....#.....................#.....#.......#.............#.....#.......#...........................#",
    "#############################################################################################################################################",
};

void draw_map(const Map& map)
{
    for (const auto& row: map)
        std::cout << row << "\n";
    std::cout << std::endl;
}

constexpr uint64_t invalid_score = std::numeric_limits<uint64_t>::max();
constexpr uint64_t unknown_score = invalid_score - 1;

uint64_t try_move(const Map& map, AllScores& all_scores, int x, int y, int dir, int nx, int ny)
{
    // std:: cout << __LINE__ << std::endl;
    // static uint64_t score_min{invalid_score};

    // std::cout << x << "," << y << "," << dx << "," << dy << "," << nx << "," << ny << "\n";
    if (x < 0 || x >= nx || y < 0 || y >= ny) return invalid_score;
    // std:: cout << __LINE__ << ":" << dir << ", " << x << ", " << y << std::endl;

    auto& score = all_scores[dir][y][x];
    if (score != unknown_score) return score;
    score = invalid_score;
    // std:: cout << __LINE__ << std::endl;

    // draw_map(map);

    // char& c = map[y][x];
    // // std::cout << c << "\n";
    // if (c == 'E') return score;
    // if (c != '.') return invalid_score;
    // c = 'x';

    // int dx_min{dx}, dy_min{dy};

    auto [dx, dy] = dxdy[dir];
    // std:: cout << __LINE__ << std::endl;

    uint64_t min_score{invalid_score};

    // auto& score0 = all_scores[dir][y][x];
    // if (score0 == unknown_score)
    {
        // score0 = invalid_score;
        uint64_t score_new = try_move(map, all_scores, x + dx, y + dy, dir, nx, ny);
        if (score_new != invalid_score)
        {
            score_new++;
            min_score = score_new;
        }
        if (x == 1 && y == 13 && dir == 0)
            std:: cout << __LINE__ << ":" << score_new << std::endl;
    }

    int dir1 = dir == 3 ? 0 : dir + 1;
    // auto& score1 = all_scores[dir1][y][x];
    // if (score1 == unknown_score)
    {
        // score1 = invalid_score;
        auto score_new = try_move(map, all_scores, x - dy, y + dx, dir1, nx, ny);
        if (score_new != invalid_score)
        {
            score_new += 1001;
            if (score_new < min_score) min_score = score_new;
        }
        if (x == 1 && y == 13 && dir == 0)
            std:: cout << __LINE__ << ":" << score_new << std::endl;
    }

    int dir2 = dir == 0 ? 3 : dir - 1;
    // auto& score2 = all_scores[dir2][y][x];
    // if (score2 == unknown_score)
    {
        // score2 = invalid_score;
        auto score_new = try_move(map, all_scores, x + dy, y - dx, dir2, nx, ny);
        if (score_new != invalid_score)
        {
            score_new += 1001;
            if (score_new < min_score) min_score = score_new;
        }
        if (x == 1 && y == 13 && dir == 0)
            std:: cout << __LINE__ << ":" << score_new << std::endl;
    }

    score = min_score;
    // if (score == unknown_score) score = invalid_score;
    // std:: cout << __LINE__ << std::endl;

    return min_score;
}

uint32_t part1(const Map& map)
{
    std:: cout << "249" << std::endl;
    int nx = map.front().size();
    int ny = map.size();

    std:: cout << "253" << std::endl;
    AllScores all_scores;
    all_scores.reserve(4);
    std:: cout << "255" << std::endl;
    for (int k = 0; k < 4; k++)
    {
        auto& map_scores = all_scores.emplace_back();

        map_scores.reserve(ny);
        for (int y=0; y < ny; y++)
        {
            auto& row = map_scores.emplace_back();
            row.reserve(nx);
            for (int x=0; x < nx; x++)
            {
                row.emplace_back(map[y][x] == '#' ? invalid_score : unknown_score);
            }
        }
    }
    std:: cout << "273" << std::endl;

    // find the start and end positions
    int x_start, y_start;
    int x_end, y_end;
    for (int y = 0; y < ny; y++)
    {
        for (int x = 0; x < nx; x++)
        {
            if (map[y][x] == 'S')
            {
                x_start = x;
                y_start = y;
            }
            else if (map[y][x] == 'E')
            {
                x_end = x;
                y_end = y;
            }
        }
    }
    // std::cout << "Initial\n";
    // draw_map(map);
    std:: cout << __LINE__ << ":" << x_end << ", " << y_end << std::endl;

    all_scores[0][y_end][x_end] = 0;
    std:: cout << __LINE__ << std::endl;
    all_scores[1][y_end][x_end] = 0;
    std:: cout << __LINE__ << std::endl;
    all_scores[2][y_end][x_end] = 0;
    std:: cout << __LINE__ << std::endl;
    all_scores[3][y_end][x_end] = 0;
    std:: cout << __LINE__ << std::endl;

    // map[y_start][x_start] = '.';
    // x_start = 13;
    // y_start = 13;
    auto ret = try_move(map, all_scores, x_start, y_start, 0, nx, ny);

    std::cout << all_scores[3][2][13] << std::endl;
    std::cout << all_scores[0][13][13] << std::endl;
    std::cout << all_scores[1][13][11] << std::endl;
    std::cout << all_scores[0][13][10] << std::endl;
    std::cout << all_scores[0][7][11] << std::endl;
    return ret;
}

int main()
{
    // std::cout << part1(sample_map1) << std::endl;
    part1(sample_map1);
    // std::cout << part1(map) << std::endl;
    return 0;
}
